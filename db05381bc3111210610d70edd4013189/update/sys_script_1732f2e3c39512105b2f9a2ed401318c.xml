<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_personal_dev_tasks</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set goal to completed when tasks are don</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var goal = current.goal;

    if (goal) {
        var taskGr = new GlideRecord('x_snc_personal_dev_tasks');
        taskGr.addQuery('goal', goal);
        taskGr.query();

        var allTasksComplete = true;

        while (taskGr.next()) {
            var taskState = taskGr.status;
            gs.info('Task Sys ID: ' + taskGr.sys_id + ', State: ' + taskState);

            if (taskState.trim().toLowerCase() !== 'complete') {
                allTasksComplete = false;
                break;
            }
        }

        var goalGr = new GlideRecord('x_snc_personal_dev_goals');
        if (goalGr.get(goal)) {
            if (allTasksComplete) {
                goalGr.status = 'complete';
                goalGr.update();
                gs.info('Goal status updated to Complete for: ' + goal);
            } else {
				goalGr.status = 'in_progress';
                goalGr.update();
                gs.info('Goal status remains unchanged for: ' + goal + ' (some tasks are still incomplete)');
            }
        } else {
            gs.info('Goal record not found for Sys ID: ' + goal);
        }
    } else {
        gs.info('Goal field is empty or undefined');
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-23 13:58:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1732f2e3c39512105b2f9a2ed401318c</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>Set goal to completed when tasks are don</sys_name>
        <sys_overrides/>
        <sys_package display_value="Personal Development" source="x_snc_personal_dev">db05381bc3111210610d70edd4013189</sys_package>
        <sys_policy/>
        <sys_scope display_value="Personal Development">db05381bc3111210610d70edd4013189</sys_scope>
        <sys_update_name>sys_script_1732f2e3c39512105b2f9a2ed401318c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-23 15:36:15</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1732f2e3c39512105b2f9a2ed401318c"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>1732f2e3c39512105b2f9a2ed401318c</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-23 13:58:28</sys_created_on>
        <sys_id>d113be67c39512105b2f9a2ed401319d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-23 13:58:28</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
